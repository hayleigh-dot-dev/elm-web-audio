{"version":3,"sources":["virtual-audio.js","main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["defer","f","setTimeout","AudioContext","window","webkitAudioContext","VirtualAudioGraph","graph","key","base","forEach","node","i","type","connections","length","flatten","nodes","depth","oldNodes","newNodes","patches","created","updated","removed","newNode","oldNode","push","data","connection","split","j","Math","max","properties","oldProp","newProp","label","value","oldConnection","newConnection","Object","values","context","opts","$context","$nodes","vPrev","autostart","resume","vGraph","vCurr","prepare","diff","patch","_destroyNode","_removeProperty","_disconnect","_createNode","_setProperty","_connect","suspend","$node","createAnalyser","createBufferSource","destination","createBiquadFilter","createChannelMerger","createChannelSplitter","createConstantSource","createConvolver","maxDelayTime","find","createDelay","createDynamicsCompressor","createGain","feedforward","feedback","createIIRFilter","mediaElement","createMediaElementSource","document","querySelector","createMediaStreamDestination","createOscillator","createPanner","createStereoPanner","createWaveShaper","console","warn","prop","start","stop","disconnect","linearRampToValueAtTime","currentTime","method","target","time","default","a","b","param","connect","audio","addEventListener","state","App","Elm","Main","init","ports","updateAudio","subscribe","update","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"main.1f19ae8e.js","sourceRoot":"../example","sourcesContent":["const defer = f => setTimeout(f, 0)\nconst AudioContext = window.AudioContext || window.webkitAudioContext\n\nexport default class VirtualAudioGraph {\n  // Static Methods ============================================================\n  //\n  static prepare (graph = []) {\n    // The first step in preparing the graph is to key each virtual node.\n    // This is how we perform a diff between graphs and calculate what has\n    // changed each update.\n    const key = (graph, base = '') => {\n      graph.forEach((node, i) => {\n        // RefNodes always have a key, and they also\n        // cannot have connections or properties\n        // so we can just return early and move on.\n        if (node.type === 'RefNode') return\n        // Assign the node a key if it didn't already have one.\n        // This is how we track changes to the graph in a slightly\n        // more organised way\n        if (!node.key) node.key = `${base}_${i}`\n\n        // Recursively assign keys to this nodes connections.\n        if (node.connections && node.connections.length > 0) {\n          key(node.connections, node.key)\n        }\n      })\n\n      return graph\n    }\n\n    // It is often most natural to represent the audio graph as a list\n    // of trees, using RefNodes to \"jump\" between chains of node\n    // connections. This isns't the easiest data structure to deal with\n    // however, so the next step in preparation is the flatten the graph\n    // into a single array.\n    const flatten = (graph, nodes = {}, depth = 0) => {\n      graph.forEach((node, i) => {\n        // Don't push RefNodes to the flat graph.\n        if (node.type !== 'RefNode') nodes[node.key] = node\n        if (node.connections) flatten(node.connections, nodes, depth + 1)\n        // If we're deeper than the root of the graph, replace\n        // this node with a reference to itself by key.\n        if (depth > 0) graph[i] = { type: 'RefNode', key: node.key }\n      })\n\n      return nodes\n    }\n\n    return flatten(key(graph))\n  }\n\n  //\n  static diff (oldNodes, newNodes) {\n    const patches = { created: [], updated: [], removed: [] }\n\n    for (const newNode of Object.values(newNodes)) {\n      const oldNode = oldNodes[newNode.key]\n\n      // A node with newNode.key does not exist in the old graph, so this must\n      // mean we've created a brand new node.\n      if (!oldNode) {\n        patches.created.push({ type: 'node', key: newNode.key, data: newNode })\n\n        newNode.connections.forEach(connection => {\n          patches.created.push({ type: 'connection', key: newNode.key, data: connection.key.split('.') })\n        })\n\n      // A node with the same key exists in both graphs, but the type has changed\n      // (eg osc -> gain) so we need to recreate the node.\n      } else if (oldNode.type !== newNode.type) {\n        patches.updated.push({ type: 'node', key: newNode.key, data: newNode })\n\n        newNode.connections.forEach(connection => {\n          patches.created.push({ type: 'connection', key: newNode.key, data: connection.key.split('.') })\n        })\n\n      // A node with the same key exists in both graphs and the node hasn't\n      // fundamentally changed, so now we check whether properties or connections\n      // have changed.\n      } else {\n        // Checking properties...\n        for (let j = 0; j < Math.max(oldNode.properties.length, newNode.properties.length); j++) {\n          const oldProp = oldNode.properties[j]\n          const newProp = newNode.properties[j]\n\n          //\n          if (!oldProp) {\n            patches.created.push({ type: 'property', key: oldNode.key, data: newProp })\n          } else if (!newProp) {\n            patches.removed.push({ type: 'property', key: oldNode.key, data: oldProp })\n          } else if (oldProp.label !== newProp.label) {\n            patches.removed.push({ type: 'property', key: oldNode.key, data: oldProp })\n            patches.created.push({ type: 'property', key: oldNode.key, data: newProp })\n          } else if (oldProp.value !== newProp.value) {\n            patches.updated.push({ type: 'property', key: oldNode.key, data: newProp })\n          }\n        }\n\n        // Checking connections...\n        for (let j = 0; j < Math.max(oldNode.connections.length, newNode.connections.length); j++) {\n          const oldConnection = oldNode.connections[j]\n          const newConnection = newNode.connections[j]\n\n          //\n          if (!oldConnection) {\n            patches.created.push({ type: 'connection', key: oldNode.key, data: newConnection.key.split('.') })\n          } else if (!newConnection) {\n            patches.removed.push({ type: 'connection', key: oldNode.key, data: oldConnection.key.split('.') })\n          } else if (oldConnection.key !== newConnection.key) {\n            patches.removed.push({ type: 'connection', key: oldNode.key, data: oldConnection.key.split('.') })\n            patches.created.push({ type: 'connection', key: oldNode.key, data: newConnection.key.split('.') })\n          }\n        }\n      }\n\n      delete oldNodes[newNode.key]\n    }\n\n    for (const oldNode of Object.values(oldNodes)) {\n      patches.removed.push({ type: 'node', key: oldNode.key, data: oldNode })\n    }\n\n    return patches\n  }\n\n  // Constructor ===============================================================\n  //\n  constructor (context = new AudioContext(), opts = {}) {\n    // Borrowing a convetion from virtual dom libraries, the $ sign //is used to\n    // indicate \"real\" Web Audio bits, and the v- prefix is used to indicate\n    // virtual elements.\n\n    // $context is a reference to the `AudioContext` either passed in or created\n    // on construction.\n    this.$context = context\n    // A reference to the real graph of audio nodes\n    this.$nodes = {}\n    // We keep track of the prebious graph so we can perform a diff and work out\n    // what has changed between updates.\n    this.vPrev = {}\n\n    // In most modern browsers an Audio Context starts in a suspended state and\n    // requires some user interaction before it can be resumed. Still, we can\n    // attempt to resume the context ourselves in the developer passes in the\n    // `autostart` option.\n    if (opts.autostart) this.resume()\n  }\n\n  // Public Methods ============================================================\n  //\n  update (vGraph = []) {\n    // The accompanying library of virtual node functions\n    // encourages a nested tree-like approach to describing\n    // audio graphs. This isn't the easiest structure to deal\n    // with, however, so a preparation step serves to wrestle\n    // the graph into a more suitable shape.\n    const vCurr = VirtualAudioGraph.prepare(vGraph)\n\n    // A diff tracks everything that has been removed, created,\n    // and updated between updates. We perform this step so we\n    // only touch the audio nodes that need to be changed in some\n    // way.\n    const diff = VirtualAudioGraph.diff(this.vPrev, vCurr)\n\n    // Remove nodes and properties from the graph.\n    diff.removed.forEach(patch => {\n      switch (patch.type) {\n        case 'node':\n          this._destroyNode(patch.key)\n          break\n        case 'property':\n          this._removeProperty(patch.key, patch.data)\n          break\n        case 'connection':\n          this._disconnect(patch.key, patch.data)\n          break\n      }\n    })\n\n    // Create new nodes and add new properties to\n    // the graph.\n    diff.created.forEach(patch => {\n      switch (patch.type) {\n        case 'node':\n          this._createNode(patch.key, patch.data)\n          break\n        case 'property':\n          this._setProperty(patch.key, patch.data)\n          break\n        case 'connection':\n          defer(() => this._connect(patch.key, patch.data))\n          break\n      }\n    })\n\n    // Update existing nodes and properties in the\n    // graph.\n    diff.updated.forEach(patch => {\n      switch (patch.type) {\n        case 'node':\n          this._destroyNode(patch.key)\n          this._createNode(patch.key, patch.data)\n          break\n        case 'property':\n          this._setProperty(patch.key, patch.data)\n          break\n        case 'connection':\n          // Connections can't be updated\n          break\n      }\n    })\n\n    // Store the current graph for next time.\n    this.vPrev = vCurr\n  }\n\n  // A thin wrapper of the `AudioContext.suspend()` method. This\n  // bassically exists so developers don't have to reach in and\n  // touch the \"real\" audio context directly.\n  suspend () {\n    this.$context.suspend()\n  }\n\n  // A thin wrapper of the `AudioContext.resume()` method. This\n  // bassically exists so developers don't have to reach in and\n  // touch the \"real\" audio context directly.\n  resume () {\n    this.$context.resume()\n  }\n\n  // Private Methods ===========================================================\n  //\n  _createNode (key, { type, properties }) {\n    let $node = null\n\n    //\n    switch (type) {\n      case 'AnalyserNode':\n        $node = this.$context.createAnalyser()\n        break\n      case 'AudioBufferSourceNode':\n        $node = this.$context.createBufferSource()\n        break\n      case 'AudioDestinationNode':\n        $node = this.$context.destination\n        break\n      case 'BiquadFilterNode':\n        $node = this.$context.createBiquadFilter()\n        break\n      case 'ChannelMergerNode':\n        $node = this.$context.createChannelMerger()\n        break\n      case 'ChannelSplitterNode':\n        $node = this.$context.createChannelSplitter()\n        break\n      case 'ConstantSourceNode':\n        $node = this.$context.createConstantSource()\n        break\n      case 'ConvolverNode':\n        $node = this.$context.createConvolver()\n        break\n      case 'DelayNode':\n        const maxDelayTime = properties.find(({ label }) => label === 'maxDelayTime')\n        $node = this.$context.createDelay((maxDelayTime && maxDelayTime.value) || 1)\n        break\n      case 'DynamicsCompressorNode':\n        $node = this.$context.createDynamicsCompressor()\n        break\n      case 'GainNode':\n        $node = this.$context.createGain()\n        break\n      case 'IIRFilterNode':\n        const feedforward = properties.find(({ label }) => label === 'feedforward')\n        const feedback = properties.find(({ label }) => label === 'feedback')\n        $node = this.$context.createIIRFilter(\n          (feedforward && feedforward.value) || [0],\n          (feedback && feedback.value) || [1]\n        )\n        break\n      case 'MediaElementAudioSourceNode':\n        const mediaElement = properties.find(({ label }) => label === 'mediaElement')\n        $node = this.$context.createMediaElementSource(\n          document.querySelector(mediaElement.value)\n        )\n        break\n      case 'MediaStreamAudioDestinationNode':\n        $node = this.$context.createMediaStreamDestination()\n        break\n        // TODO: How should I handle creating / grabbing the media stream?\n        // case 'MediaStreamAudioSourceNode':\n        //   $node = this.$context.createMediaStreamSource(\n\n        //   )\n        //   break\n      case 'OscillatorNode':\n        $node = this.$context.createOscillator()\n        break\n      case 'PannerNode':\n        $node = this.$context.createPanner()\n        break\n      case 'StereoPannerNode':\n        $node = this.$context.createStereoPanner()\n        break\n      case 'WaveShaperNode':\n        $node = this.$context.createWaveShaper()\n        break\n      //\n      default:\n        console.warn(`Invalide node type of: ${type}. Defaulting to GainNode to avoid crashing the AudioContext.`)\n        $node = this.$context.createGain()\n    }\n\n    this.$nodes[key] = $node\n\n    //\n    properties.forEach(prop => this._setProperty(key, prop))\n\n    // Certain nodes like oscillators must be started before they will produce\n    // noise. We make the assumption that these nodes should always start\n    // immediately after they have been created, so if a `start` method exists we\n    // call it.\n    if ($node.start) $node.start()\n  }\n\n  //\n  _destroyNode (key) {\n    const $node = this.$nodes[key]\n\n    // Certain nodes like oscillators can be stopped. It probably doesn't make\n    // much of a difference calling this method, but we do just in case!\n    if ($node.stop) $node.stop()\n\n    // Calling disconnect with no arguments will disconnect this node from\n    // everything.\n    $node.disconnect()\n\n    // Finally remove the node from the graph and let the GC do its job.\n    delete this.$nodes[key]\n  }\n\n  //\n  _setProperty (key, { type, label, value }) {\n    const $node = this.$nodes[key]\n\n    switch (type) {\n      case 'NodeProperty':\n        $node[label] = value\n        break\n      case 'AudioParam':\n        $node[label].linearRampToValueAtTime(value, this.$context.currentTime + 0.01)\n        break\n      case 'ScheduledUpdate':\n        $node[label][value.method](value.target, value.time)\n        break\n    }\n  }\n\n  //\n  _removeProperty (key, { type, label, value }) {\n    const $node = this.$nodes[key]\n\n    switch (type) {\n      case 'NodeProperty':\n        break\n      case 'AudioParam':\n        $node[label].value = $node[label].default\n        break\n      case 'ScheduledUpdate':\n        // TODO: work out how to cancel scheduled updates\n        break\n    }\n  }\n\n  //\n  _connect (a, [b, param = null]) {\n    if (b) this.$nodes[a].connect(param ? this.$nodes[b][param] : this.$nodes[b])\n  }\n\n  //\n  _disconnect (a, [b, param = null]) {\n    if (b) this.$nodes[a].disconnect(param ? this.$nodes[b][param] : this.$nodes[b])\n  }\n}\n","/* global AudioContext */\nimport { Elm } from './Main.elm'\nimport VirtualAudioGraph from './virtual-audio'\n\nconst context = new AudioContext()\nconst audio = new VirtualAudioGraph(context)\n\n// Chrome autplay policy demans some user interaction\n// takes place before the AudioContext can be resumed.\nwindow.addEventListener('click', () => {\n  if (context.state === 'suspended') context.resume()\n})\n\nconst App = Elm.Main.init({\n  node: document.querySelector('#app')\n})\n\nApp.ports.updateAudio.subscribe(graph => {\n  audio.update(graph)\n})\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}